---
# tasks file for configure-networking

############
# SSH keys #
############
- name: generate ssh keys for master host
  user: name=root generate_ssh_key=yes ssh_key_bits=4096 ssh_key_file=.ssh/id_rsa ssh_key_comment='{{ inventory_hostname }}'
  when: inventory_hostname == groups['deployment-host'][0]
  run_once: yes
  tags:
    - ssh-keys

- name: retrieve remote ssh public key
  fetch: dest="/tmp/" src="~/.ssh/{{ item }}" flat=yes
  with_items:
    - id_rsa
    - id_rsa.pub
  when: inventory_hostname == groups['deployment-host'][0]
  tags:
    - ssh-keys
    - ssh-keys-distribute

- name: distribute keys to all hosts
  authorized_key: >
    key="{{ lookup('file', '/tmp/id_rsa.pub') }}"
    state=present
    user=root
  ignore_errors: yes
  tags:
    - ssh-keys
    - ssh-keys-distribute

- name: copy master's private key to all hosts
  copy: src=/tmp/id_rsa dest=~/.ssh/id_rsa mode=0600
  tags:
    - ssh-keys

- name: remove temp local pubkey copies
  local_action: file dest="/tmp/{{ item }}" state=absent
  with_items:
    - id_rsa
    - id_rsa.pub
  when: inventory_hostname == groups['deployment-host'][0]
  tags:
    - ssh-keys
    - ssh-keys-distribute

#######################
# Ensure interfaces.d #
#######################
- name: create directory
  file:
    path: "{{ network_interface_path }}"
    state: directory
  tags:
    - config

############################
# Template interfaces file #
############################
- name: template interfaces
  template:
    src: all_interfaces.j2
    dest: "{{ network_all_interfaces_path }}"
    backup: yes
  tags:
    - networking

####################
# Remove old files #
####################
- name: create directory
  file:
    path: "{{ network_interfaces_dir_path }}/backups"
    state: directory
  tags:
    - config

- name: backup files
  shell: "for i in $(ls {{ network_interface_path }});do mv {{ network_interface_path }}/$i {{ network_interfaces_dir_path }}/backups/${i}.$(date +'%Y%m%d_%H%M%S');done"

###############################
# Template interfaces.d files #
###############################
- name: configure physical and tagged interface
  template:
    src: eth.j2
    dest: "{{ network_interface_path }}/device-eth"
  with_dict: TARGET_HOSTS
  when: item.key == "{{ ansible_hostname }}"
  tags: debug

- name: configure bridge interfaces
  template:
    src: bridges.j2
    dest: "{{ network_interface_path }}/device-bridges"
  with_dict: TARGET_HOSTS
  when: item.key == "{{ ansible_hostname }}"
  tags: debug

- name: manually up and down interfaces
  shell: ifdown -a && ifup -a
  tags: restart-networking

##################################
# Template hosts and .ssh/config #
##################################
- name: template /etc/hosts file for all openstack nodes
  template: src=hosts.j2 dest=/etc/hosts
  tags: hosts-file

- name: template .ssh/config file on all openstack nodes
  template: src=config.j2 dest=/root/.ssh/config backup=yes
  tags: ssh-config

- name: template local .ssh/config file
  local_action: template src=config_local.j2 dest=~/.ssh/config2
  run_once: true
  tags: ssh-config

- name: notify about local .ssh/config
  debug: msg="Be sure to add the contents of ~/.ssh/config2 to your ~/.ssh/config !!"
  run_once: true
  tags: ssh-config
